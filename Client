import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.net.*;
import java.util.*;
import java.io.*;


class Frame extends JFrame implements ActionListener {
	   Container cp;Container cp1 =new Container();
	   JLabel l;
	   JTextArea t;
	   TextField tf;
	   JButton b;
	   JPanel p;
	   public Frame(){
	   	
	       cp= getContentPane();
	       cp.setBackground (Color.white); cp1.setLayout (new BorderLayout());
	       cp1.setBackground (Color.yellow);

	       l= new JLabel("Client");
	       
	       t = new JTextArea();
	       t.setColumns(150);
	       tf= new TextField(15);

	       b = new JButton ("Send"); 
	       b.addActionListener(this);

	       p= new JPanel();
	       p.setBackground (Color.black);
	       
	       cp.add(l, "North");
	       l. setFont (new Font ("Courier", Font.BOLD+Font.ITALIC, 13));
	       add (cp1, "Center");
	       cp1.add(t);
	       p.add(tf);
	       p.add(b);
	       add (p, "South");

	       setDefaultCloseOperation (EXIT_ON_CLOSE);
	       setVisible(true);
	       setSize(250,250);
	       setLocation(900,300);
	       setTitle("Server Chat");
	   }
}

public class Client extends Frame implements Runnable, ActionListener {

    PrintWriter sender ;
    Scanner receiver ;
    Socket Socket2 ;
    public  Client()throws IOException {
        super();
        Connect();
    }
    public static void main(String []args) throws IOException {
        new Client();
    }

    private void Connect() throws IOException {
        Thread t = new Thread(this);
         Socket2 = new Socket(InetAddress.getLocalHost(),1978);
        sender = new PrintWriter(Socket2.getOutputStream(),true);
        receiver = new Scanner(Socket2.getInputStream());
        t.start();
    }
    public void run() {
        String Massege ;
        while (true){
        	Massege = receiver.nextLine();
        	Client.super.t.append("Server " +Massege+"\n");
        }

    }
        public void actionPerformed(ActionEvent ae) {
            if (ae.getSource().equals(Client.super.b)||ae.getSource().equals(Client.super.tf)) {
                String Massege = Client.super.tf.getText();
                Client.super.tf.setText(" ");
                Client.super.t.append(Massege + "\n");
                sender.println(Massege);
            }
        }
    
}
